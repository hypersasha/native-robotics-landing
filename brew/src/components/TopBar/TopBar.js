import React, {useEffect, useRef, useState} from 'react';
import {Link, useLocation, useRouteMatch} from 'react-router-dom';
import './topbar.less';

export default function TopBar() {
    const [isMenu, setIsMenu] = useState(false);
    const [isOpen, setIsOpen] = useState(false);
    const [isClose, setIsClose] = useState(false);
    const [webMenu, setWebMenu] = useState([]);
    const [prevScrollPos, setPrevScrollPos] = useState(0);
    const [isHidden, setIsHidden] = useState(false);
    const [headerHeight, setHeaderHeight] = useState(80);

    let location = useLocation();

    const headerRef = useRef(null);

    let { path, url } = useRouteMatch();

    /**
     * This is a menu map for generating desktop navigation.
     */
    const menu = {
        '/#products': {
            label: 'Products',
            dropdown: [
                {link: '/omnipack', label: 'OmniPack'},
                {link: '/omnifit', label: 'OmniFit'}
            ]
        },
        '/#company': {
            label: 'Company'
        },
        '/#distributors': {
            label: 'Distributors'
        },
        '/#contacts': {
            label: 'Contacts'
        }
    };

    useEffect(() => {
        setHeaderHeight(headerRef.current.clientHeight);
    }, [headerHeight, setHeaderHeight])

    // This effect calls every location update.
    
    useEffect(() => {

        // Turn on window scrolling
        document.getElementsByTagName('html')[0].style.overflowY = 'auto';
        document.getElementsByTagName('html')[0].style.touchAction = 'auto';

        let curr_location = location.pathname + location.hash;

        let curr_location_arr = curr_location.split('/');
        let nested_fragment = '';
        if (curr_location_arr.length >= 2) {
            nested_fragment = '/' + curr_location_arr[1];
            if (curr_location_arr[1] === 'omnipack' || curr_location_arr[1] === 'omnifit') nested_fragment = '/#products';
        }

        // Generates desktop menu
        let menuLinks = [];
        for (let link in menu) {
            menuLinks.push(
                <div className={"menu-link" + (nested_fragment === link ? ' active' : '')} key={'link-' + link}>
                    <Link to={link}> 
                        <div className={"menu-link--label" + (menu[link].dropdown !== undefined ? ' expandable' : '')}>
                            <span>{menu[link].label}</span>
                            <div className="menu-link--pane" /> 
                        </div>
                    </Link>
                    {menu[link].dropdown !== undefined && 
                        <div className="menu-link--dropdown">
                            {menu[link].dropdown.map((item) => {
                                return <div key={"sublink-" + item.link} className="menu-link--dropdown-item">
                                <Link to={item.link}>{item.label}</Link>
                            </div>
                            })}
                        </div>
                    }
                </div>
            );
        }
        setWebMenu(menuLinks);

        scrollToHash();
        
        // Change document title.
        switch(window.location.pathname) {
            case '/omnipack': 
                document.title = 'OmniPack | Native Robotics'
            break;
            case '/omnifit':
                document.title = 'OmniFit | Native Robotics'
            break;
            case '/fanuc':
                document.title = 'OmniFit | FANUC';
                setIsHidden(true);
                break;
            default:
                document.title = 'Native Robotics';
        }

        closeMobileMenu();
    }, [location]);

    useEffect(() => {
        if (window.location.pathname !== '/fanuc') {
            window.addEventListener('scroll', onPageScroll, {passive: true});
            return () => {
                window.removeEventListener('scroll', onPageScroll)
            }
        }
    }, [prevScrollPos, isHidden, setIsHidden, setPrevScrollPos])


    function scrollToHash() {
        // If we need some navigation via hash-tags # 
        if (window.location.hash.length > 0) {
            let elem_id = window.location.hash.replace('#', '');
            let elem = document.getElementById(elem_id);
            if (elem !== null) {
                window.scrollTo(0, elem.offsetTop)
            } else {
                // console.log('no element', elem_id);
                setTimeout(() => scrollToHash(), 0)
            }
        } else {
            if (window.location.pathname === '/') {
                window.scrollTo(0,0);
            }
        }
    }

    function onPageScroll() {
        let pos = window.scrollY;
        setPrevScrollPos(pos); 
        if (window.scrollY >= 0) {
            let top = headerRef.current.style.top || 0;
            headerRef.current.style.top = Math.min(Math.max((parseFloat(top) + (prevScrollPos - pos)), headerHeight * -1), 0) + 'px';
            setPrevScrollPos(pos);
        }
    }


    /**
     * Triggers, when mobile menu icon tapped.
     */
    function openMobileMenu() {
        if (isMenu) {
            setIsOpen(false);
            setIsClose(true);
            document.getElementsByTagName('html')[0].style.overflowY = 'auto';
            document.getElementsByTagName('html')[0].style.touchAction = 'auto';
        } else {
            setIsOpen(true);
            setIsClose(false);
            document.getElementsByTagName('html')[0].style.overflowY = 'hidden';
            document.getElementsByTagName('html')[0].style.height = '100%';
            document.getElementsByTagName('html')[0].style.touchAction = 'none';
        }
        setIsMenu(!isMenu);
    }

    /**
     * Triggers, when menu item tapped (in mobile version)
     */
    function closeMobileMenu() {
        setIsOpen(false);
        setIsClose(true);
        document.getElementsByTagName('html')[0].style.overflow = 'auto';
        document.getElementsByTagName('html')[0].style.touchAction = 'auto';
        setIsMenu(false);
    }

    return(
        <header ref={headerRef} className={(isHidden ? 'hidden' : '')}>
            
            <div className="header-content">
                <div className="open-menu">
                    <div className={"open-menu--icon" + (isOpen ? ' pressed' : '') + (isClose ? ' unpressed' : '')} onTouchEnd={openMobileMenu} />
                </div>
                <div className="nr-top-logo">
                    <a href="/">
                        <svg width="174" height="28" viewBox="0 0 174 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.501 11.5652H11.9521C12.1861 11.5652 12.4106 11.6622 12.5761 11.8349C12.7415 12.0075 12.8345 12.2417 12.8345 12.4859V14H10.501V11.5652Z" fill="#040506"/>
                        <path fillRule="evenodd" clipRule="evenodd" d="M6.37553 28V6.51028H15.2679C15.7179 6.51101 16.1493 6.69411 16.4675 7.01946C16.7857 7.34481 16.9648 7.78588 16.9655 8.24599V18.1257H12.9747L16.9601 28H23.3356V4.58172C23.3364 3.36778 22.8656 2.20323 22.0268 1.34407C21.188 0.484909 20.0498 0.0014606 18.8625 0H0V28H6.37553Z" fill="#040506"/>
                        <path d="M152.169 8.67606C152.923 8.67606 153.534 8.05178 153.534 7.28169C153.534 6.5116 152.923 5.88732 152.169 5.88732C151.416 5.88732 150.805 6.5116 150.805 7.28169C150.805 8.05178 151.416 8.67606 152.169 8.67606Z" fill="#040506"/>
                        <path d="M68.8158 8.67606C69.5693 8.67606 70.1802 8.05178 70.1802 7.28169C70.1802 6.5116 69.5693 5.88732 68.8158 5.88732C68.0622 5.88732 67.4513 6.5116 67.4513 7.28169C67.4513 8.05178 68.0622 8.67606 68.8158 8.67606Z" fill="#040506"/>
                        <path fillRule="evenodd" clipRule="evenodd" d="M39.9769 22.7465V8.04225H42.5817C43.574 8.04225 44.3182 8.8662 44.3182 9.8169V22.7465H47.2952V8.99296C47.2952 6.83803 45.5586 5 43.388 5H37V22.7465H39.9769Z" fill="#040506"/>
                        <path d="M122.648 5.06338C123.579 5.06338 124.509 5.06338 125.439 5.06338C125.439 6.96479 125.439 8.8662 125.439 10.7676C125.811 10.3873 126.245 10.1972 126.742 10.0704C127.734 9.75352 128.85 9.88028 129.718 10.3873C130.525 10.8944 131.083 11.7817 131.269 12.7324C131.455 13.493 131.393 14.2535 131.393 15.0141C131.393 16.0282 131.393 16.9789 131.393 17.993C131.393 18.9437 131.455 19.831 131.083 20.7183C130.773 21.6056 130.153 22.3662 129.284 22.7465C128.106 23.2535 126.742 23.1901 125.687 22.4296C125.377 22.2394 125.129 21.9859 124.943 21.7324C124.881 22.1127 124.819 22.493 124.695 22.8732C124.013 22.8732 123.268 22.8732 122.586 22.8732C122.648 16.8521 122.648 10.9577 122.648 5.06338ZM126.742 12.5423C126.183 12.6056 125.749 12.9859 125.501 13.493C125.377 13.7465 125.377 14 125.377 14.2535C125.377 15.7746 125.377 17.2958 125.377 18.8803C125.377 19.5775 125.935 20.1479 126.555 20.338C127.114 20.4648 127.734 20.4014 128.106 19.9577C128.416 19.6408 128.54 19.1338 128.54 18.6901C128.54 17.1056 128.54 15.5845 128.54 14C128.54 13.5563 128.416 13.1127 128.106 12.8592C127.796 12.5423 127.238 12.4789 126.742 12.5423Z" fill="#040506"/>
                        <path d="M60.1331 5.06338C61.0634 5.06338 61.9937 5.06338 62.9239 5.06338C62.9239 6.07747 62.9239 9.05634 62.9239 10.1338C63.7302 10.1338 64.5364 10.1338 65.3427 10.1338C65.3427 10.9577 65.3427 11.7183 65.3427 12.5423C64.5364 12.5423 63.7302 12.5423 62.9239 12.5423C62.9239 14.6338 62.9239 16.662 62.9239 18.7535C62.9239 19.1338 62.986 19.5141 63.234 19.7676C63.4821 20.0845 63.9162 20.1479 64.2884 20.2113C64.7225 20.2113 65.1566 20.2113 65.5908 20.2113C65.5908 21.0986 65.5908 21.9859 65.5908 22.8732C64.7225 22.8732 63.7922 22.9366 62.9239 22.7465C62.2417 22.6197 61.5595 22.2394 61.0014 21.7324C60.2571 20.9085 60.0711 19.7042 60.0711 18.6268C60.1331 16.4718 60.1331 6.07747 60.1331 5.06338Z" fill="#040506"/>
                        <path d="M143.487 5.06338C144.417 5.06338 145.347 5.06338 146.278 5.06338C146.278 6.07747 146.278 9.05634 146.278 10.1338C147.084 10.1338 147.89 10.1338 148.696 10.1338C148.696 10.9577 148.696 11.7183 148.696 12.5423C147.89 12.5423 147.084 12.5423 146.278 12.5423C146.278 14.6338 146.278 16.7254 146.278 18.8169C146.278 19.1972 146.402 19.7042 146.774 19.8944C147.084 20.1479 147.456 20.1479 147.828 20.1479C148.2 20.1479 148.572 20.1479 148.944 20.1479C148.944 21.0352 148.944 21.9225 148.944 22.8099C148.076 22.8099 147.208 22.8732 146.34 22.6831C145.595 22.5563 144.913 22.2394 144.355 21.669C143.921 21.2254 143.673 20.6549 143.549 20.0845C143.425 19.5775 143.425 19.007 143.425 18.5C143.487 16.4718 143.487 6.07747 143.487 5.06338Z" fill="#040506"/>
                        <path d="M50.148 11.6549C50.7682 10.6408 51.9466 10.0704 53.1249 9.94366C54.1793 9.8169 55.2956 9.94366 56.2259 10.4507C56.9701 10.831 57.5903 11.5282 57.8384 12.3521C58.0865 12.9859 58.1485 13.6197 58.1485 14.2535C58.1485 17.1056 58.1485 19.9577 58.1485 22.8099C57.4663 22.8099 56.7841 22.8099 56.0398 22.8099C55.9778 22.3662 55.8538 21.9859 55.7918 21.5423C55.2956 22.1761 54.6134 22.6831 53.8692 22.9366C53.249 23.1268 52.5668 23.1268 51.9466 23C51.2024 22.8732 50.3961 22.5563 49.8999 21.9225C49.2798 21.162 49.1557 20.1479 49.2798 19.1972C49.4038 18.1831 50.024 17.2958 50.8302 16.7254C52.1326 15.7113 53.7451 15.2676 55.2956 14.9507C55.2956 14.4437 55.3576 13.9366 55.1716 13.4296C55.0475 13.0493 54.7374 12.7958 54.3653 12.7324C53.7451 12.5423 53.0009 12.6056 52.5668 13.1761C52.1947 13.5563 52.1947 14.1268 52.1947 14.6338C51.2644 14.6338 50.3341 14.6338 49.4038 14.6338C49.4658 13.493 49.5899 12.4789 50.148 11.6549ZM53.373 17.8662C52.9389 18.0563 52.4427 18.3732 52.2567 18.8803C52.1326 19.2606 52.1326 19.7042 52.3187 20.0211C52.5668 20.338 52.9389 20.4014 53.249 20.4014C53.8071 20.4014 54.3653 20.2113 54.7995 19.831C55.1096 19.5141 55.3576 19.1338 55.3576 18.6901C55.3576 18.1831 55.3576 17.7394 55.3576 17.2324C54.6754 17.3592 53.9932 17.5493 53.373 17.8662Z" fill="#040506"/>
                        <path d="M86.6152 9.94366C87.7315 9.8169 88.8479 9.94366 89.8402 10.5141C90.5844 10.9577 91.2046 11.6549 91.5147 12.4789C91.7008 13.0493 91.7628 13.6197 91.7628 14.1901C91.7628 15.1408 91.7628 16.1549 91.7628 17.1056C89.7782 17.1056 87.7936 17.1056 85.7469 17.1056C85.7469 17.6761 85.7469 18.3099 85.7469 18.8803C85.7469 19.3239 85.933 19.7676 86.2431 20.0211C86.6772 20.338 87.1734 20.4014 87.7316 20.338C88.1657 20.2746 88.5998 19.9577 88.7859 19.5141C88.9719 19.1972 88.9719 18.8169 88.9719 18.4366C89.9022 18.4366 90.8325 18.4366 91.7628 18.4366C91.7628 19.3873 91.6387 20.4014 91.0806 21.2254C90.4604 22.1761 89.4681 22.7465 88.4138 22.9366C87.2974 23.1268 86.057 23.0634 85.0647 22.493C84.3205 22.1127 83.6383 21.4155 83.3282 20.5915C83.0801 20.0211 83.0181 19.3873 83.0181 18.7535C83.0181 17.169 83.0181 15.5845 83.0181 14C83.0181 13.0493 83.2662 12.0986 83.8864 11.338C84.5686 10.5141 85.5609 10.0704 86.6152 9.94366ZM86.119 13.0493C85.809 13.493 85.809 14.0634 85.809 14.5704C86.8633 14.5704 87.9796 14.5704 89.034 14.5704C89.034 14.0634 89.034 13.5563 88.7859 13.1127C88.5378 12.669 88.0416 12.4789 87.5455 12.4789C86.9873 12.4789 86.4291 12.6056 86.119 13.0493Z" fill="#040506"/>
                        <path d="M115.95 9.88028C117.067 9.75352 118.245 10.007 119.237 10.6408C119.981 11.1479 120.478 11.9718 120.726 12.8592C120.912 13.493 120.85 14.1901 120.85 14.8873C120.85 16.0915 120.85 17.2324 120.85 18.4366C120.85 18.9437 120.85 19.5141 120.726 20.0211C120.478 20.9085 119.919 21.7324 119.175 22.2394C118.183 22.8732 117.005 23.0634 115.826 22.9366C114.834 22.8099 113.904 22.4296 113.159 21.7324C112.663 21.2253 112.353 20.5915 112.167 19.8944C112.043 19.2606 112.043 18.5634 112.043 17.9296C112.043 16.5986 112.043 15.2676 112.043 13.9366C112.043 12.8592 112.415 11.7817 113.159 11.0845C113.904 10.3239 114.958 9.94366 115.95 9.88028ZM116.074 12.5423C115.702 12.6056 115.33 12.7958 115.082 13.1127C114.896 13.4296 114.834 13.8099 114.834 14.1901C114.834 15.4577 114.834 16.662 114.834 17.9296C114.834 18.4366 114.772 18.9437 114.958 19.4507C115.082 19.9577 115.516 20.2746 116.012 20.4014C116.508 20.4648 117.129 20.4648 117.563 20.1479C117.935 19.831 118.121 19.3239 118.121 18.8169C118.121 17.2324 118.121 15.7113 118.121 14.1268C118.121 13.6831 118.059 13.2394 117.749 12.9859C117.253 12.4789 116.632 12.4789 116.074 12.5423Z" fill="#040506"/>
                        <path d="M136.913 9.88028C138.029 9.8169 139.207 10.007 140.138 10.6408C140.882 11.1479 141.44 11.9718 141.688 12.9225C141.812 13.493 141.812 14.0634 141.812 14.6338C141.812 15.7113 141.812 16.7887 141.812 17.8662C141.812 18.5634 141.874 19.2606 141.688 19.9577C141.502 20.8451 140.944 21.7324 140.2 22.2394C139.207 22.9366 137.967 23.1268 136.789 23C135.734 22.8732 134.68 22.4296 133.998 21.5423C133.378 20.7817 133.129 19.831 133.129 18.8803C133.129 17.2324 133.129 15.6479 133.129 14C133.129 12.9225 133.502 11.8451 134.246 11.1479C134.866 10.3239 135.858 9.94366 136.913 9.88028ZM137.037 12.5423C136.665 12.6056 136.23 12.7958 136.044 13.1761C135.796 13.6197 135.858 14.1268 135.796 14.5704C135.796 15.7746 135.796 16.9155 135.796 18.1197C135.796 18.6268 135.734 19.1338 135.92 19.5775C136.106 20.0211 136.541 20.338 136.975 20.4014C137.471 20.4648 138.091 20.4648 138.525 20.0845C138.897 19.7676 139.021 19.2606 139.021 18.8169C139.021 17.2324 139.021 15.7113 139.021 14.1268C139.021 13.6831 138.897 13.2394 138.587 12.9225C138.153 12.4789 137.533 12.4789 137.037 12.5423Z" fill="#040506"/>
                        <path d="M157.069 10.831C157.937 10.1338 159.115 9.8169 160.17 9.88028C161.162 9.88028 162.154 10.1972 162.899 10.831C163.581 11.338 164.015 12.0986 164.201 12.9225C164.387 13.6831 164.325 14.4437 164.325 15.2042C163.395 15.2042 162.464 15.2042 161.534 15.2042C161.534 14.6972 161.596 14.1268 161.472 13.6197C161.348 13.1127 160.976 12.669 160.48 12.5423C159.922 12.4155 159.301 12.4155 158.805 12.7958C158.433 13.1127 158.309 13.6197 158.309 14.0634C158.309 15.6479 158.309 17.2324 158.309 18.8169C158.309 19.3239 158.557 19.8944 158.991 20.0845C159.488 20.338 160.108 20.338 160.604 20.1479C161.038 20.0211 161.41 19.5775 161.472 19.0704C161.534 18.5634 161.472 18.0563 161.534 17.5493C162.464 17.5493 163.395 17.5493 164.325 17.5493C164.325 18.1831 164.387 18.8803 164.263 19.5141C164.139 20.338 163.767 21.0986 163.209 21.669C162.527 22.3662 161.534 22.7465 160.542 22.8732C159.426 23 158.185 22.8099 157.255 22.1127C156.511 21.6056 155.952 20.7817 155.766 19.8944C155.642 19.3873 155.642 18.8803 155.642 18.3099C155.642 17.2324 155.642 16.0915 155.642 15.0141C155.642 14.3169 155.58 13.6197 155.766 12.9225C155.89 12.2254 156.325 11.338 157.069 10.831Z" fill="#040506"/>
                        <path d="M167.364 10.7042C168.232 10.007 169.411 9.8169 170.527 9.88028C171.395 9.94366 172.325 10.2606 172.946 10.8944C173.504 11.4014 173.752 12.162 173.814 12.9225C173.814 13.2394 173.814 13.6197 173.814 13.9366C172.884 13.9366 172.015 13.9366 171.085 13.9366C171.085 13.5563 171.147 13.1127 170.899 12.7958C170.713 12.4789 170.341 12.3521 169.969 12.3521C169.597 12.3521 169.163 12.4789 168.976 12.7958C168.79 13.0493 168.79 13.4296 168.852 13.7465C168.976 14.1268 169.287 14.3803 169.597 14.5704C170.403 15.1408 171.271 15.5211 172.077 16.1549C172.636 16.5986 173.194 17.1056 173.566 17.7394C174.062 18.6268 174 19.7676 173.69 20.7183C173.38 21.6056 172.636 22.3028 171.767 22.6197C170.589 23.0634 169.225 23.1268 168.046 22.6197C167.24 22.3028 166.496 21.6056 166.186 20.7183C165.876 20.0211 165.938 19.2606 165.938 18.5C166.868 18.5 167.798 18.5 168.728 18.5C168.728 19.007 168.666 19.5141 168.914 19.9577C169.1 20.338 169.473 20.5282 169.907 20.5282C170.279 20.5282 170.651 20.4648 170.899 20.2113C171.147 19.9577 171.209 19.5141 171.147 19.1972C171.085 18.8169 170.713 18.5634 170.465 18.3099C169.721 17.8028 168.914 17.3592 168.17 16.8521C167.488 16.3451 166.744 15.7746 166.372 14.9507C166.062 14.3169 166.062 13.5563 166.124 12.8592C166.31 11.9718 166.744 11.2113 167.364 10.7042Z" fill="#040506"/>
                        <path d="M67.4513 10.1338C68.3816 10.1338 69.3119 10.1338 70.2422 10.1338C70.2422 14.3803 70.2422 18.5634 70.2422 22.8099C69.3119 22.8099 68.3816 22.8099 67.4513 22.8099C67.4513 18.5634 67.4513 14.3169 67.4513 10.1338Z" fill="#040506"/>
                        <path d="M72.0407 10.1338C72.971 10.1338 73.9633 10.1338 74.8936 10.1338C75.5138 12.9225 76.134 15.7746 76.7542 18.5634C77.3744 15.7746 77.9946 12.9225 78.6148 10.1338C79.545 10.1338 80.5373 10.1338 81.4676 10.1338C80.3513 14.3803 79.2349 18.5634 78.1806 22.8099C77.2503 22.8099 76.258 22.8099 75.3277 22.8099C74.2734 18.5634 73.1571 14.3169 72.0407 10.1338Z" fill="#040506"/>
                        <path d="M150.805 10.1338C151.735 10.1338 152.665 10.1338 153.596 10.1338C153.596 14.3803 153.596 18.5634 153.596 22.8099C152.665 22.8099 151.735 22.8099 150.805 22.8099C150.805 18.5634 150.805 14.3169 150.805 10.1338Z" fill="#040506"/>
                        <path d="M103.608 17.4859C104.973 17.4859 103.174 17.4859 103.608 17.4859V17.4859Z" fill="#040506"/>
                        <path d="M110.182 22.3662C109.314 20.7183 108.446 19.007 107.578 17.3592H110.058V13.9366C110.058 13.6831 110.058 13.4296 110.058 13.1127V12.4789C110.058 12.4155 110.058 12.2887 110.058 12.2254C110.058 11.4648 110.058 9.30986 110.058 8.54929C110.12 7.53521 109.686 6.52113 108.942 5.82394C108.322 5.25352 107.454 4.87324 106.585 4.87324C102.368 4.87324 104.477 4.87324 100.259 4.87324C100.259 10.3239 100.259 17.169 100.259 22.6831C101.252 22.6831 102.244 22.6831 103.236 22.6831C103.298 20.9084 103.236 19.1338 103.236 17.3592C103.36 17.3592 103.484 17.3592 103.608 17.3592C103.732 17.3592 103.981 17.3592 104.415 17.3592C105.283 19.0704 106.213 20.7183 107.081 22.4296C107.144 22.493 107.206 22.6197 107.268 22.6831C107.64 22.6831 108.012 22.6831 108.446 22.6831C109.066 22.6831 109.686 22.6831 110.368 22.6831C110.306 22.6831 110.244 22.493 110.182 22.3662ZM107.081 14.4437H105.159C104.849 14.4437 104.663 14.4437 104.539 14.4437C104.601 14.4437 104.415 14.4437 103.236 14.4437C103.236 12.7958 103.236 9.75352 103.236 8.04225C106.275 8.04225 103.05 8.04225 106.089 8.04225C106.585 7.97887 107.081 8.48592 107.081 8.99296C107.081 9.88028 107.081 11.6549 107.081 12.8592V14.4437Z" fill="#040506"/>
                    </svg>
                    </a>
                </div>
                <div className="topbar-right" />   
                <div className="menu">
                    {webMenu}
                </div>
            </div>

            <div className={"mobile-menu" + (isMenu ? ' opened' : '')}>
                <div className="mobile-menu--section">
                    <div className="item">
                        <a href="/">
                            <div className="item-label">Homepage</div>
                        </a>
                    </div>
                </div>
                <div className="mobile-menu--section">
                    <div className="label">Products</div>
                    <div className="item">
                        <Link to="/omnipack">
                            <div className="item-label">OmniPack</div>
                        </Link>
                    </div>
                    <div className="item">
                        <Link to="/omnifit">
                            <div className="item-label">OmniFit</div>
                        </Link>
                    </div>
                </div>
                <div className="mobile-menu--section">
                    <div className="label">About us</div>
                    {/* <div className="item">
                        <Link to="/blog">
                            <div className="item-label">Blog</div>
                        </Link>
                    </div> */}
                    <div className="item">
                        <Link to="/#distributors">
                            <div className="item-label">Distributors</div>
                        </Link>
                    </div>
                    <div className="item">
                        <Link to="/#contacts">
                            <div className="item-label">Contacts</div>
                        </Link>
                    </div>
                </div>
            </div>
        </header>
    )
}